name: Craft CMS Update Action

# Wann soll es laufen?
on:
  # Jeden Sonntag um 3 Uhr
  schedule:
    - cron: '0 3 * * 0'
  # Oder manuell
  workflow_dispatch:

jobs:
  update-craft:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Code holen
      - name: Checkout Code
        uses: actions/checkout@v4
        
      # 2. PHP Setup (wie bei der Wiki-Action)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, gd, imagick, zip, dom, mysql
          
      # 3. SSH Setup fÃ¼r Server
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      # 4. Server-Updates ausfÃ¼hren
      - name: Run Craft Updates
        run: |
          # SSH zu deinem Server
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          "cd /var/www/dein-craft-projekt && \
           php craft update all --interactive=0 && \
           composer update --no-dev"
           
      # 5. Pull Request erstellen
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          title: "ðŸ¤– Craft CMS Dependencies Updated"
          body: |
            ## Automatische Updates
            
            - âœ… Craft CMS aktualisiert
            - âœ… Composer Dependencies aktualisiert
            - ðŸ“… Datum: ${{ steps.date.outputs.date }}
            
            **Bitte prÃ¼fen und mergen!**
          branch: auto-update-craft
          
# SECRETS DIE DU BRAUCHST:
# Repository â†’ Settings â†’ Secrets â†’ Actions:
# 
# SSH_PRIVATE_KEY - Dein SSH Key fÃ¼r Server-Zugriff
# SERVER_USER - z.B. "ubuntu" oder "www-data" 
# SERVER_HOST - z.B. "dein-server.com"

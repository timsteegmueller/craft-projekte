name: üíæ CraftCMS Auto Backup & Update

on:
  repository_dispatch:
    types:
      - run-backup-und-update
  workflow_dispatch:

jobs:
  craft-auto-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE:      ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER:          ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD:      ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, dom, curl, intl, gd, zip, fileinfo
          ini-values: memory_limit=512M,post_max_size=64M,upload_max_filesize=64M
          coverage: none

      - name: Change to Project Directory
        run: |
          echo "=== NAVIGATING TO PROJECT DIRECTORY ==="
          cd mein-test-projekt
          echo "Current directory: $(pwd)"
          ls -la
          echo "PROJECT_DIR=$(pwd)" >> $GITHUB_ENV

      - name: Install Composer Dependencies
        working-directory: mein-test-projekt
        run: |
          echo "=== Installing Dependencies ==="
          composer install --no-interaction --prefer-dist
          echo "=== Verifying Craft Binary ==="
          ls -la vendor/bin/
          if [ -f "vendor/bin/craft" ]; then
            echo "Craft binary found!"
            chmod +x vendor/bin/craft
          else
            echo "ERROR: Craft binary not found in expected location"
            exit 1
          fi

      - name: Backup Database
        working-directory: mein-test-projekt
        env:
          MYSQL_PWD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          mkdir -p backups
          mysqldump --no-tablespaces -h127.0.0.1 -u${{ secrets.MYSQL_USER }} ${{ secrets.MYSQL_DATABASE }} > backups/backup_$(date +'%F').sql
          echo "Database backup created"

      - name: Create .env File
        working-directory: mein-test-projekt
        run: |
          cat <<EOF > .env
          DB_DRIVER=mysql
          DB_SERVER=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=${{ secrets.MYSQL_DATABASE }}
          DB_USER=${{ secrets.MYSQL_USER }}
          DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          SECURITY_KEY=${{ secrets.SECURITY_KEY }}
          ENVIRONMENT=dev
          EOF
          echo ".env file created"

      - name: Test DB Connection
        working-directory: mein-test-projekt
        run: |
          echo "=== TESTING DB CONNECTION ==="
          php vendor/bin/craft setup/db-creds --interactive=0
          echo "Database connection successful!"

      - name: Run Composer Update
        working-directory: mein-test-projekt
        run: |
          echo "=== UPDATING COMPOSER DEPENDENCIES ==="
          composer update --no-interaction
          echo "Composer dependencies updated"

      - name: Run Craft Update
        working-directory: mein-test-projekt
        env:
          DB_DRIVER: "mysql"
          DB_SERVER: "127.0.0.1"
          DB_PORT: "3306"
          DB_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          DB_USER: ${{ secrets.MYSQL_USER }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          SECURITY_KEY: ${{ secrets.SECURITY_KEY }}
          CRAFT_LICENSE_KEY: ${{ secrets.CRAFT_LICENSE_KEY }}
        run: |
          echo "=== RUNNING CRAFT UPDATE ==="
          php vendor/bin/craft update all --interactive=0
          echo "Craft CMS updated successfully"

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          echo "Git configured"

      - name: Create and Push Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Immer einen Branch erstellen
          BRANCH_NAME="updates/automated-craft-$(date +'%F')"
          echo "Creating branch: $BRANCH_NAME"
          
          # Pr√ºfen, ob Branch schon existiert und ggf. l√∂schen
          if git ls-remote --heads origin $BRANCH_NAME | grep -q $BRANCH_NAME; then
            echo "Branch already exists, deleting it"
            git push origin --delete $BRANCH_NAME || true
          fi
          
          # Neuen Branch erstellen
          git checkout -b $BRANCH_NAME
          
          # √Ñnderungen committen
          git add mein-test-projekt/composer.lock mein-test-projekt/composer.json
          git commit -m "chore(deps): Automatische Craft & Plugin Updates $(date +'%F')" || echo "No changes to commit"
          git commit --allow-empty -m "chore: Workflow Test" || true
          
          # Branch pushen
          git push --set-upstream origin $BRANCH_NAME
          echo "Branch pushed to repository"

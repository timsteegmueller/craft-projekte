# ====================================================================================
#  💾 CraftCMS Auto Backup & Update Workflow (Version 2.0 – Final Debugging)
# ====================================================================================
name: 💾 CraftCMS Auto Backup & Update

on:
  repository_dispatch:
    types: [run-backup-und-update]

jobs:
  craft-auto-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE:      ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER:          ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD:      ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v4

      - name: 📦 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo_mysql, dom, curl, intl, gd, zip, fileinfo
          ini-values: memory_limit=512M, post_max_size=64M, upload_max_filesize=64M
          coverage: none

      - name: ✅ Check for composer.lock
        working-directory: ./mein-test-projekt/web
        run: |
          if [ ! -f composer.lock ]; then
            echo "::error::composer.lock nicht gefunden."
            exit 1
          fi

      - name: 🧰 Install Composer Dependencies
        working-directory: ./mein-test-projekt/web
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: 🐛 DEBUG: List files after composer install
        working-directory: ./mein-test-projekt/web
        run: ls -la

      - name: 📝 Create .env
        working-directory: ./mein-test-projekt/web
        run: |
          echo "DB_DRIVER=mysql"       > .env
          echo "DB_SERVER=127.0.0.1"   >> .env
          echo "DB_PORT=3306"          >> .env
          echo "DB_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "DB_USER=${{ secrets.MYSQL_USER }}"         >> .env
          echo "DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "SECURITY_KEY=${{ secrets.SECURITY_KEY }}"   >> .env
          echo "ENVIRONMENT=dev"       >> .env

      - name: 🐛 DEBUG: Show .env content
        working-directory: ./mein-test-projekt/web
        run: cat .env

      - name: 🧪 Test Craft DB Connection
        working-directory: ./mein-test-projekt/web
        run: php vendor/bin/craft setup/db-creds --interactive=0

      - name: 🔁 Run PHP Craft Update
        working-directory: ./mein-test-projekt/web
        env:
          DB_DRIVER:       mysql
          DB_SERVER:       127.0.0.1
          DB_PORT:         3306
          DB_DATABASE:     ${{ secrets.MYSQL_DATABASE }}
          DB_USER:         ${{ secrets.MYSQL_USER }}
          DB_PASSWORD:     ${{ secrets.MYSQL_PASSWORD }}
          SECURITY_KEY:    ${{ secrets.SECURITY_KEY }}
          CRAFT_LICENSE_KEY: ${{ secrets.CRAFT_LICENSE_KEY }}
        run: php vendor/bin/craft update all --interactive=0

      - name: 📝 Configure Git
        run: |
          git config --global user.name  'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: ✨ Create Branch, Commit and Push Changes
        id: commit_push
        run: |
          if git diff --quiet --exit-code composer.lock composer.json; then
            echo "Keine neuen Updates."
            echo "changes_pushed=false" >> $GITHUB_OUTPUT
          else
            BRANCH="updates/automated-craft-updates-$(date +%Y-%m-%d)"
            git checkout -b $BRANCH
            git add composer.lock composer.json
            git commit -m "chore(deps): 🤖 Automatisierte Craft CMS & Plugin Updates"
            git push --set-upstream origin $BRANCH
            echo "changes_pushed=true"  >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT
          fi
        working-directory: ./mein-test-projekt/web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Done
        run: echo "Backup- und Update-Prozess erfolgreich abgeschlossen!"
